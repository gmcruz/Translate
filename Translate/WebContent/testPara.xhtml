<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

	<head>
		
		<script src="js/jquery-1.11.1.min.js"></script>
		<script src="js/jquery-ui/js/jquery-ui-1.10.4.custom.min.js"></script>
		
		<title>Test Page</title>
				
		<style>			
			body {				
				border-style: dashed;
				border-width: 1px;
				color: green;				
			}
			
			#container {
				width: 650px;
				border-style: dashed;
				border-width: 2px;
				color: yellow;	
			} 
						
			#contentElem {				
				border-style: dotted;
				border-width: 1px;
				color: blue;					
			}
			#contentElem tr td{
				margin: 0;				
				padding: 0px 5px;
				list-style: none;
				float: left;
				border-style: dotted;
				border-width: 0px;
				color: black;							
			}	
						
			div .elemWord {
				font-size: 1.1em;
				padding: 0px 0px;	
				margin: 0;			
				border-style: dotted;
				border-width: 0px;
				color: black;	
				font-family: Verdana;
			}
			div .noTranslationHelp{
				color: green;	
			}
			div .wordToHelpTranslate {
				font-size: 1.3em;
				padding: 0px 0px;	
				margin: 0;	
				color: #0066CC;	
				font-family: Verdana;
			}			
			div .elemTranslation {
				font-size: .7em;
				color: #C0C0C0;
				padding: 0px 0px;
				margin: 0;
				border-style: dotted;
				border-width: 0px;					
				text-align: center;
			}
			div .invisible {
				font-size: .7em;
				color: #FFFFFF;
				padding: 0px 0px;
				margin: 0;
				border-style: dotted;
				border-width: 0px;					
				text-align: center;
			}			
			
			.cf:before,	.cf:after {
			    content: " "; /* 1 */
			    display: table; /* 2 */
			}			
			.cf:after {
			    clear: both;
			}			
			/*** For IE 6/7 only Include this rule to trigger hasLayout and contain floats. */
			.cf {
			    *zoom: 1;
			}
				
			div.selected {
			  background-color: #3399FF;
			  color: white;
			  z-index: 100;
			}
			
			.messagepop {
			  background-color: #FFFFFF;
			  border: 2px solid #999999;
			  cursor: default;
			  display: none;
			  margin-top: 7px;
			  position: absolute;
			  text-align: left;
			  width: 250px;
			  z-index: 50;
			  padding: 10px 10px 10px;
			  border-radius: 4px;
			  box-shadow: 3px 3px 2px #888888;
			}
			
			label #labelNewTranslation{
			  display: block;
			  margin-bottom: 3px;
			  padding-left: 15px;
			  text-indent: -15px;
			}
			
			.handCursor{
				cursor: pointer;
			}
			
			#newTranslationPopup p div{
				border: 1px dotted #999999;
			}					
			
		</style>
				
		<script type="text/javascript">
			
			$(document).ready(function(){
										
				$.getJSON( "http://127.0.0.1:8080/TranslateModule/resource/tests/", function( data ) {
					
					var fromLang;
					var toLang;
					
					if (data.hasOwnProperty("language")) {			
						fromLang = data.language.from;
						toLang = data.language.to;							
					}
					
					if (data.hasOwnProperty("paragraphs")) {				
						var items = [];
						$.each( data.paragraphs, function( key, valParagraphs ) {

							if (valParagraphs.hasOwnProperty("paragraph")) {

								$.each( valParagraphs.paragraph, function( key, valParagraph ) {
									items.push( "<tr>" );									
									$.each( valParagraph.sentences, function( key, valSentence ) {
										
										var meaning = valSentence.meaning;
																					
										$.each( valSentence.sentence, function( key, valWord ) {
																						
											items.push( "<td>" );
											
											//Look ahead to what is next for punctuation
											var next = valSentence.sentence[key+1];
											var addPunc = "";
											//TODO change to a regex later
											if(next != undefined &amp;&amp; (next.word == "." || next.word == "," || next.word == "?" || next.word == "!" || next.word == ";" || next.word == ":"  || next.word == "-")){
												addPunc = next.word;												
											}													
											
											//numbers or other words who do not have translations like names or city names etc....
											if(valWord.id == undefined &amp;&amp; valWord.translation == undefined){
												items.push( '<td><div class="elemWord">' + valWord.word + addPunc + '</div><div class="elemTranslation"> </div></td>' );
											}
											//Punctuation just show as is.
											else if(valWord.punc != undefined){
												//dont push out as it has been hanlded by the peek ahead.
											}
											//ask for help in getting it translated.
											else if(valWord.empty != undefined &amp;&amp; valWord.empty == true){
												items.push( '<td><div class="elemWord handCursor noTranslationHelp" onclick="newTranslationFn(' + valWord.id + ',\'' + fromLang + '\',\'' + toLang + '\',\'' + valWord.word + '\');">' + valWord.word + addPunc + '</div><div class="invisible">'+valWord.id+'</div></td>' );
											}
											else if(valWord.show != undefined &amp;&amp; valWord.show == false){
												items.push( '<td><div class="elemWord">' + valWord.word + addPunc + '</div><div class="invisible">' + valWord.translation + '</div></td>' );
											}
											//Ref word must loop to find in returned JSON
											else if(valWord.ref != undefined){		
												var tempRef = getObjects(data, "id", valWord.id);
												var typeClass = "elemTranslation";
												if(tempRef[0].show != undefined &amp;&amp; tempRef[0].show == false){
													typeClass = "invisible";
												}													
												items.push( '<td><div class="elemWord">' + tempRef[0].word + addPunc + '</div><div class="' + typeClass + '">' + tempRef[0].translation + '</div></td>' );
											}
											//Regular word to process
											else if(valWord.ref == undefined){
												items.push( '<td><div class="elemWord">' + valWord.word + addPunc + '</div><div class="elemTranslation">' + valWord.translation + '</div></td>' );
											}	
											items.push( "</td>" );
											
										});
									});
									items.push( "</tr>" );
									items.push( "<tr><td><br/></td></tr>" );
									items.push( "<tr><td><br/></td></tr>" );
									
								});

							}

						});
						
						$("#contentElem").html("").html( items.join( "" ) );									

					}		

				});						
				
			});
						
			function getObjects(obj, key, val) {			
			    var objects = [];
			    for (var i in obj) {		    	
			    	if (!obj.hasOwnProperty(i)) continue;
			        if (typeof obj[i] == 'object') {
			            objects = objects.concat(getObjects(obj[i], key, val));
			        } else if (i == key &amp;&amp; obj[key] == val &amp;&amp; obj.word != undefined) {		        	
			            objects.push(obj);
			        }
			    }
			    return objects;
			}
						
			function closeNewTranslationPopup() {				 			       
				clearNewTranslationPopupForm();					
		        deselect();			
		        $("#newTranslationPopup").slideFadeToggle('0'); 
			};
			
			function clearNewTranslationPopupForm() {				 			       
				$("#new_userTranslationform").find('input:text, input:hidden, input:password, input:file, select, textarea').val('');
				$("#new_userTranslationform").find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');					       
			};
			
			function deselect() {
				$(".newTranslationPopup").slideFadeToggle(function() { 
					$("#newTranslationDiv").removeClass("selected");
			    });   
			};
			
			$.fn.slideFadeToggle = function(showHide, easing, callback) {
				return this.animate({ opacity: showHide, height: 'show' }, "fast", easing, callback);
			};
			
			function newTranslationFn(id, fromLang, toLang, word) {
				clearNewTranslationPopupForm();								
				$("#newTranslationPopup").css( {position:"absolute", top:event.pageY, left: event.pageX});				
				$("#fromLangTranslationId").val(id);
		        $("#newTranslationFromLang").val(fromLang);
		        $("#newTranslationToLang").val(toLang);
				$("#newTranslation").focus();
				$("#newTranslationPopup").slideFadeToggle('1'); 
				$("#wordToTranslate").text(word + " =");
			};
			
		</script>

	</head>

	<body>			
		
		<div id="container">
			<table id="contentElem" class="cf"/>		
		</div>
		
		<div id="newTranslationPopup" class="messagepop">
		    <form method="post" id="new_userTranslationform" action="/messages">
		        <div>
		        	<label id="labelNewTranslation" for="newTranslation">Help out by adding a translation</label>
		        	<span id="wordToTranslate" class="wordToHelpTranslate" />		        	
		        	<input type="text" size="10" name="newTranslation" id="newTranslation" />
		        </div>		        	
		        <p>
		        	<button type="submit" id="addTranslation">Submit</button>  
		        	<button type="button" onclick="closeNewTranslationPopup()">Cancel</button>  
		        </p>
		        <input type="hidden" name="fromLangTranslationId" id="fromLangTranslationId" />
		        <input type="hidden" name="newTranslationFromLang" id="newTranslationFromLang" />
		        <input type="hidden" name="newTranslationToLang" id="newTranslationToLang" />
		    </form>
		</div>
	</body>

</html>





<!-- 
/*Get the keys of a javascript object.*/
var keys = [];
for(var k in obj) keys.push(k);
console.log("total " + keys.length + " keys: " + keys);
 -->